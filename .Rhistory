`3. Death Rate` = sum(DEATH_RATE)) %>%
mutate_if(is.numeric, ~(./sum(.))) %>%
pivot_longer(cols = 2:4,
names_to = "Statistics",
values_to = "Rate (per 100K)") %>%
ggplot(aes(x = Statistics,
y = `Rate (per 100K)`,
fill = `Age Group`), border = "white") +
geom_bar(position = 'stack', stat = 'identity') +
scale_fill_manual(values=met.brewer("Hokusai1", 8)) +
scale_y_continuous(label = percent) +
theme_minimal() +
labs(x = NULL,
y = "Share of Rate (per 100K)",
title = "Case Rate (per 100K) byAge Group")
Hokusai1_reverse = c("#224b5e", "#94b594", "#edc775",  "#e09351", "#df7e66", "#00a7bd", "#b75347", "#6d2f20")
group %>%
filter(group == "Age group") %>%
group_by(subgroup) %>%
rename(`Age Group` = subgroup) %>%
summarise(`1. Infection Rate` = sum(CASE_RATE),
`2. Hospitalization Rate` = sum(HOSPITALIZED_RATE),
`3. Death Rate` = sum(DEATH_RATE)) %>%
mutate_if(is.numeric, ~(./sum(.))) %>%
pivot_longer(cols = 2:4,
names_to = "Statistics",
values_to = "Rate (per 100K)") %>%
ggplot(aes(x = Statistics,
y = `Rate (per 100K)`,
fill = `Age Group`), border = "white") +
geom_bar(position = 'stack', stat = 'identity') +
scale_fill_manual(values=Hokusai1_reverse) +
scale_y_continuous(label = percent) +
theme_minimal() +
labs(x = NULL,
y = "Share of Rate (per 100K)",
title = "Case Rate (per 100K) byAge Group")
Hokusai1_reverse = c("#224b5e", "#94b594", "#0090a4", "#edc775",  "#e09351", "#df7e66", "#b75347", "#6d2f20")
group %>%
filter(group == "Age group") %>%
group_by(subgroup) %>%
rename(`Age Group` = subgroup) %>%
summarise(`1. Infection Rate` = sum(CASE_RATE),
`2. Hospitalization Rate` = sum(HOSPITALIZED_RATE),
`3. Death Rate` = sum(DEATH_RATE)) %>%
mutate_if(is.numeric, ~(./sum(.))) %>%
pivot_longer(cols = 2:4,
names_to = "Statistics",
values_to = "Rate (per 100K)") %>%
ggplot(aes(x = Statistics,
y = `Rate (per 100K)`,
fill = `Age Group`), border = "white") +
geom_bar(position = 'stack', stat = 'identity') +
scale_fill_manual(values=Hokusai1_reverse) +
scale_y_continuous(label = percent) +
theme_minimal() +
labs(x = NULL,
y = "Share of Rate (per 100K)",
title = "Case Rate (per 100K) byAge Group")
Hokusai1_reverse = c("#224b5e", "#94b594", "#007a8b", "#edc775",  "#e09351", "#df7e66", "#b75347", "#6d2f20")
group %>%
filter(group == "Age group") %>%
group_by(subgroup) %>%
rename(`Age Group` = subgroup) %>%
summarise(`1. Infection Rate` = sum(CASE_RATE),
`2. Hospitalization Rate` = sum(HOSPITALIZED_RATE),
`3. Death Rate` = sum(DEATH_RATE)) %>%
mutate_if(is.numeric, ~(./sum(.))) %>%
pivot_longer(cols = 2:4,
names_to = "Statistics",
values_to = "Rate (per 100K)") %>%
ggplot(aes(x = Statistics,
y = `Rate (per 100K)`,
fill = `Age Group`), border = "white") +
geom_bar(position = 'stack', stat = 'identity') +
scale_fill_manual(values=Hokusai1_reverse) +
scale_y_continuous(label = percent) +
theme_minimal() +
labs(x = NULL,
y = "Share of Rate (per 100K)",
title = "Case Rate (per 100K) byAge Group")
pal2 = c("#007a8b", "#224b5e", "#94b594", "#edc775",  "#e09351", "#df7e66", "#b75347", "#6d2f20")
rm(Hokusai1_reverse)
pal2 = c("#007a8b", "#224b5e", "#94b594", "#edc775",  "#e09351", "#df7e66", "#b75347", "#6d2f20")
group %>%
filter(group == "Age group") %>%
group_by(subgroup) %>%
rename(`Age Group` = subgroup) %>%
summarise(`1. Infection Rate` = sum(CASE_RATE),
`2. Hospitalization Rate` = sum(HOSPITALIZED_RATE),
`3. Death Rate` = sum(DEATH_RATE)) %>%
mutate_if(is.numeric, ~(./sum(.))) %>%
pivot_longer(cols = 2:4,
names_to = "Statistics",
values_to = "Rate (per 100K)") %>%
ggplot(aes(x = Statistics,
y = `Rate (per 100K)`,
fill = `Age Group`), border = "white") +
geom_bar(position = 'stack', stat = 'identity') +
scale_fill_manual(values=Hokusai1_reverse) +
scale_y_continuous(label = percent) +
theme_minimal() +
labs(x = NULL,
y = "Share of Rate (per 100K)",
title = "Case Rate (per 100K) byAge Group")
pal2 = c("#007a8b", "#224b5e", "#94b594", "#edc775",  "#e09351", "#df7e66", "#b75347", "#6d2f20")
group %>%
filter(group == "Age group") %>%
group_by(subgroup) %>%
rename(`Age Group` = subgroup) %>%
summarise(`1. Infection Rate` = sum(CASE_RATE),
`2. Hospitalization Rate` = sum(HOSPITALIZED_RATE),
`3. Death Rate` = sum(DEATH_RATE)) %>%
mutate_if(is.numeric, ~(./sum(.))) %>%
pivot_longer(cols = 2:4,
names_to = "Statistics",
values_to = "Rate (per 100K)") %>%
ggplot(aes(x = Statistics,
y = `Rate (per 100K)`,
fill = `Age Group`), border = "white") +
geom_bar(position = 'stack', stat = 'identity') +
scale_fill_manual(values = pal2) +
scale_y_continuous(label = percent) +
theme_minimal() +
labs(x = NULL,
y = "Share of Rate (per 100K)",
title = "Case Rate (per 100K) byAge Group")
pal1 <- c("#1e3557", "#e9d8a6", "#ae2012")
group %>% filter(group == "Borough") %>%
group_by(subgroup) %>%
rename(Borough = subgroup) %>%
summarise(`1. Infection Rate` = sum(CASE_RATE),
`2. Hospitalization Rate` = sum(HOSPITALIZED_RATE),
`3. Death Rate` = sum(DEATH_RATE)) %>%
pivot_longer(cols = 2:4, names_to = "Indicator", values_to = "Rate (per 100K)") %>%
plot_ly(x = ~ Borough, y = ~`Rate (per 100K)`, type = 'bar',
color = ~Indicator, colors = pal1) %>%
layout(title = "Case Rate by Borough", barmode = 'stack',
xaxis=list(title = ""), yaxis=list(title = "Rate (Per 100K)"))
pal1 <- c("#1e3557", "#e9d8a6", "#ae2012")
group %>%
filter(group == "Borough") %>%
group_by(subgroup) %>%
rename(Borough = subgroup) %>%
summarise(`1. Infections` = sum(CASE_COUNT),
`2. Hospitalizations` = sum(HOSPITALIZED_COUNT),
`3. Deaths` = sum(DEATH_COUNT)) %>%
pivot_longer(cols = 2:4, names_to = "Indicator", values_to = "Case Count") %>%
plot_ly(x = ~ Borough, y = ~`Case Count`, type = 'bar', color = ~Indicator, colors = pal1) %>%
layout(title = "Total Number of Cases by Borough", barmode = 'stack',
xaxis=list(title = ""), yaxis=list(title = "Number of People"))
rm(my_palette)
View(daily)
save.image("R_object.RData")
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE,
fig.width = 10, fig.height = 5, fig.align = "center")
library(tidyverse)
library(lubridate)
library(scales)
library(mice)
library(kableExtra)
library(knitr)
library(AER)
library(summarytools)
library(visdat)
library(dlookr)
library(plotly)
library(DataExplorer)
library(RSocrata)
library(janitor)
library(zoo)
library(skimr)
library(Amelia)
library(ggthemes)
library(sf)
## Daily Data
download.file(
"https://raw.githubusercontent.com/nychealth/coronavirus-data/master/trends/data-by-day.csv",
destfile = "daily.csv", method = "curl")
daily <- read.csv("daily.csv")
## Group Data
download.file(
"https://raw.githubusercontent.com/nychealth/coronavirus-data/master/totals/by-group.csv",
destfile = "group.csv", method = "curl")
group <- read.csv("group.csv")
## Modzcta (Zip Code) Data
download.file(
"https://raw.githubusercontent.com/nychealth/coronavirus-data/master/totals/data-by-modzcta.csv",
destfile = "modzcta.csv", method = "curl")
modzcta <- read.csv("modzcta.csv")
## Shape Files: Create folder to store files, download zip, unzip and load
library(plyr)
dir <- "/Users/aly_will_mac/Desktop/OLD PC/WILL/LEARNING/1. ALL PROJECTS/R-NYC-COVID-Stats/Shape Files"
dir.create("Shape Files")
do.call(file.remove, list(list.files(path = dir, full.names = TRUE)))
download.file(
"https://data.cityofnewyork.us/api/geospatial/pri4-ifjk?method=export&format=Shapefile",
destfile = "/Users/aly_will_mac/Desktop/OLD PC/WILL/LEARNING/1. ALL PROJECTS/R-NYC-COVID-Stats/Shape Files/modzcta_zip.zip")
zip <- list.files(path = dir, pattern = "*.zip", full.names = T)
ldply(.data = zip, .fun = unzip, exdir = dir)
modzcta_shp <- list.files(path = dir, pattern = "*.shp", full.names = T) %>%
st_read()
detach(package:plyr, unload = TRUE)
head(daily)
head(group)
head(modzcta)
daily %>%
skim() %>%
kbl() %>%
kable_classic_2(c("striped", "hovered"), html_font = "Calibri") %>%
scroll_box(width = "100%", height = "300px")
group %>%
skim() %>%
kbl() %>%
kable_classic_2(c("striped", "hovered"), html_font = "Calibri") %>%
scroll_box(width = "100%", height = "300px")
modzcta %>%
skim() %>%
kbl() %>%
kable_classic_2(c("striped", "hovered"), html_font = "Calibri") %>%
scroll_box(width = "100%", height = "300px")
daily %>% missmap(main = "Missing vs. Observed Values")
group %>% missmap(main = "Missing vs. Observed Values")
modzcta %>% missmap(main = "Missing vs. Observed Values")
group %>% slice(1:6)
group[4, c(3:5, 7:10)] <- rollsumr(group[1:3, c(3:5, 7:10)], k=3)
group <- group %>% slice(-c(1:3))
group %>% missmap(main = "Observed vs. Missing Values")
group %>%
filter(group == "Borough") %>%
group_by(subgroup) %>%
select(subgroup) %>%
count() %>%
kbl(col.names = c("Borough", "Count")) %>%
kable_classic_2(c("striped", "hovered"),
html_font = "calibri")
group <- group %>%
mutate(subgroup = case_when(
subgroup == "StatenIsland" ~ "Staten Island",
TRUE ~ subgroup))
group %>%
filter(group == "Borough") %>%
group_by(subgroup) %>%
select(subgroup) %>%
count() %>%
kbl(col.names = c("Borough", "Count")) %>%
kable_classic_2(c("striped", "hovered"),
html_font = "calibri")
daily <- daily %>%
mutate(date_of_interest = as.Date(date_of_interest,
format = "%m/%d/%Y"))
class(daily$date_of_interest)
group %>%
filter(group == "Citywide") %>%
summarise(`Total Infections` = sum(CASE_COUNT),
`Total Hospitalizations` = sum(HOSPITALIZED_COUNT),
`Total Deaths` = sum(DEATH_COUNT)) %>%
kbl(align = "lcr",
format.args = list(big.mark = ",")) %>%
kable_classic_2()
daily %>%
plot_ly(x = ~date_of_interest, y = ~CASE_COUNT,
type = 'bar', name = 'Infections Count', marker = list(color = "#5c89c9")) %>%
add_trace(X = ~date_of_interest, y = ~CASE_COUNT_7DAY_AVG,
type = 'scatter', mode = 'line', name = '7-Day Avg. Infections',
marker = list(color = "#1d3557"), line = list(color = "#1e3557")) %>%
layout(xaxis = list(title = "Date"),
yaxis = list(title = "Number of People"),
title = "Daily Citywide Infections")
daily %>%
plot_ly(x = ~date_of_interest, y = ~HOSPITALIZED_COUNT,
type = 'bar', name = 'Hosp. Count', marker = list(color = "#e9d8a6")) %>%
add_trace(x = ~date_of_interest, y = ~DEATH_COUNT_7DAY_AVG,
type = 'scatter', mode = 'line', name = '7-Day Avg. Hosp.',
marker = list(color = "735d1d"), line = list(color = "#735d1d")) %>%
layout(xaxis = list(title = NULL),
yaxis = list(title = "No. of Hospitalizations"),
title = "Daily Citywide Hospitalizations")
daily %>%
plot_ly(x = ~date_of_interest, y = ~DEATH_COUNT,
type = 'bar', name = 'Death Count', marker = list(color = "#f5aaa2")) %>%
add_trace(x = ~date_of_interest, y = ~DEATH_COUNT_7DAY_AVG,
type = 'scatter', mode = 'line', name = '7-Day Avg. Deaths',
marker = list(color = "#ae2012"), line = list(color = "#ae2012")) %>%
layout(xaxis = list(title = ""),
yaxis = list(title = "No. of Deaths"),
title = "Daily Citywide Deaths")
daily %>% filter(date_of_interest == max(daily$date_of_interest)) %>%
group_by(date_of_interest) %>%
rename(Date = date_of_interest) %>%
summarise(Infections = sum(CASE_COUNT),
Hospitalizations = sum(HOSPITALIZED_COUNT),
Deaths = sum(DEATH_COUNT)) %>%
kbl(align = "lccr",
format.args = list(big.mark = ",")) %>%
kable_classic_2()
pal1 <- c("#1e3557", "#e9d8a6", "#ae2012")
group %>%
filter(group == "Borough") %>%
group_by(subgroup) %>%
rename(Borough = subgroup) %>%
summarise(`1. Infections` = sum(CASE_COUNT),
`2. Hospitalizations` = sum(HOSPITALIZED_COUNT),
`3. Deaths` = sum(DEATH_COUNT)) %>%
pivot_longer(cols = 2:4, names_to = "Indicator", values_to = "Case Count") %>%
plot_ly(x = ~ Borough, y = ~`Case Count`, type = 'bar', color = ~Indicator, colors = pal1) %>%
layout(title = "Total Number of Cases by Borough", barmode = 'stack',
xaxis=list(title = ""), yaxis=list(title = "Number of People"))
daily %>%
plot_ly(x = ~date_of_interest, y = ~BX_CASE_COUNT_7DAY_AVG,
type = 'scatter', mode = 'line', name = 'Bronx') %>%
add_trace(x = ~date_of_interest, y= ~BK_CASE_COUNT_7DAY_AVG,
type = 'scatter', mode = 'line', name = 'Brookyln') %>%
add_trace(x = ~date_of_interest, y= ~MN_CASE_COUNT_7DAY_AVG,
type = 'scatter', mode = 'line', name = 'Manhattan') %>%
add_trace(x = ~date_of_interest, y= ~QN_CASE_COUNT_7DAY_AVG,
type = 'scatter', mode = 'line', name = 'Queens') %>%
add_trace(x = ~date_of_interest, y= ~SI_CASE_COUNT_7DAY_AVG,
type = 'scatter', mode = 'line', name = 'Staten Island') %>%
layout(xaxis = list(title = ""),
yaxis = list(title = ""),
title = "7-Day Avg. Infections by Borough")
daily %>%
plot_ly(x = ~date_of_interest, y = ~ BX_HOSPITALIZED_COUNT_7DAY_AVG,
type = 'scatter', mode = 'line', name = 'Bronx') %>%
add_trace(x = ~date_of_interest, y= ~BK_HOSPITALIZED_COUNT_7DAY_AVG,
type = 'scatter', mode = 'line', name = 'Brookyln') %>%
add_trace(x = ~date_of_interest, y= ~MN_HOSPITALIZED_COUNT_7DAY_AVG,
type = 'scatter', mode = 'line', name = 'Manhattan') %>%
add_trace(x = ~date_of_interest, y= ~QN_HOSPITALIZED_COUNT_7DAY_AVG,
type = 'scatter', mode = 'line', name = 'Queens') %>%
add_trace(x = ~date_of_interest, y= ~SI_HOSPITALIZED_COUNT_7DAY_AVG,
type = 'scatter', mode = 'line', name = 'Staten Island') %>%
layout(xaxis = list(title = "Date"),
yaxis = list(title = "Number of Cases"),
title = "7-Day Avg. Hospitalizations by Borough")
daily %>%
plot_ly(x = ~date_of_interest, y = ~BX_DEATH_COUNT_7DAY_AVG,
type = 'scatter', mode = 'line', name = 'Bronx') %>%
add_trace(x = ~date_of_interest, y= ~BK_DEATH_COUNT_7DAY_AVG,
type = 'scatter', mode = 'line', name = 'Brookyln') %>%
add_trace(x = ~date_of_interest, y= ~MN_DEATH_COUNT_7DAY_AVG,
type = 'scatter', mode = 'line', name = 'Manhattan') %>%
add_trace(x = ~date_of_interest, y= ~QN_DEATH_COUNT_7DAY_AVG,
type = 'scatter', mode = 'line', name = 'Queens') %>%
add_trace(x = ~date_of_interest, y= ~SI_DEATH_COUNT_7DAY_AVG,
type = 'scatter', mode = 'line', name = 'Staten Island') %>%
layout(xaxis = list(title = ""),
yaxis = list(title = ""),
title = "7-Day Avg. Deaths by Borough")
group %>% filter(group == "Borough") %>%
group_by(subgroup) %>%
summarise(
`Hospitalized as % of Cases` = (sum(HOSPITALIZED_COUNT)/sum(CASE_COUNT))*100,
`Deaths as % of Cases` = (sum(DEATH_COUNT)/sum(CASE_COUNT))*100
) %>%
plot_ly(x=~subgroup, y=~`Hospitalized as % of Cases`, type = 'bar', name = '% Hospitalized',
marker = list(color = "#e9d8a6")) %>%
add_trace(x=~subgroup, y=~`Deaths as % of Cases`, name = '% Died', marker = list(color = "#ae2012")) %>%
layout(title = "Share of Infections that Lead to Hopitalizations & Deaths",
barmode = 'group',
xaxis = list(title=''),
yaxis = list(title='Share of Infection Rate',
ticksuffix = "%"))
group %>% filter(group == "Borough") %>%
group_by(subgroup) %>%
rename(Borough = subgroup) %>%
summarise(`1. Infection Rate` = sum(CASE_RATE),
`2. Hospitalization Rate` = sum(HOSPITALIZED_RATE),
`3. Death Rate` = sum(DEATH_RATE)) %>%
pivot_longer(cols = 2:4, names_to = "Indicator", values_to = "Rate (per 100K)") %>%
plot_ly(x = ~ Borough, y = ~`Rate (per 100K)`, type = 'bar',
color = ~Indicator, colors = pal1) %>%
layout(title = "Case Rate by Borough", barmode = 'stack',
xaxis=list(title = ""), yaxis=list(title = "Rate (Per 100K)"))
pal2 = c("#007a8b", "#224b5e", "#94b594", "#edc775",  "#e09351", "#df7e66", "#b75347", "#6d2f20")
group %>%
filter(group == "Age group") %>%
group_by(subgroup) %>%
rename(`Age Group` = subgroup) %>%
summarise(`1. Infection Rate` = sum(CASE_RATE),
`2. Hospitalization Rate` = sum(HOSPITALIZED_RATE),
`3. Death Rate` = sum(DEATH_RATE)) %>%
mutate_if(is.numeric, ~(./sum(.))) %>%
pivot_longer(cols = 2:4,
names_to = "Statistics",
values_to = "Rate (per 100K)") %>%
ggplot(aes(x = Statistics,
y = `Rate (per 100K)`,
fill = `Age Group`), border = "white") +
geom_bar(position = 'stack', stat = 'identity') +
scale_fill_manual(values = pal2) +
scale_y_continuous(label = percent) +
theme_minimal() +
labs(x = NULL,
y = "Share of Rate (per 100K)",
title = "Case Rate (per 100K) byAge Group")
group %>%
filter(group == "Age group") %>%
group_by(subgroup) %>%
rename(`Age Group` = subgroup) %>%
summarise(
`Hospitalized as % of Cases` = (sum(HOSPITALIZED_COUNT)/sum(CASE_COUNT))*100,
`Deaths as % of Cases` = (sum(DEATH_COUNT)/sum(CASE_COUNT))*100
) %>%
plot_ly(x = ~`Age Group`, y = ~`Hospitalized as % of Cases`, type = 'bar',
name = '% Hospitalized', marker = list(color = "#e9d8a6")) %>%
add_trace(x = ~`Age Group`, y = ~`Deaths as % of Cases`, name = '% Died',
marker = list(color = "#ae2012")) %>%
layout(title = "Share of Infections that Lead to Hopitalizations & Deaths",
barmode = 'group',
xaxis = list(title='Age Group'),
yaxis = list(title='Share of Infection Rate',
ticksuffix = "%"))
library(MetBrewer)
group %>%
filter(group == "Race") %>%
group_by(subgroup) %>%
rename(`Race/Ethnicity` = subgroup) %>%
summarise(`1. Infection Rate` = sum(CASE_RATE),
`2. Hospitalization Rate` = sum(HOSPITALIZED_RATE),
`3. Death Rate` = sum(DEATH_RATE)) %>%
pivot_longer(cols = 2:4,
names_to = "Indicator",
values_to = "Rate (per 100K)") %>%
ggplot(aes(x = Indicator,
y = `Race/Ethnicity`,
fill = `Rate (per 100K)`)) +
geom_tile() +
scale_fill_gradientn(colors = met.brewer("Hokusai1", type = "continuous")) +
theme_minimal() +
labs(x = NULL, y= NULL, title = "Case Rate (per 100K) by Race/Ethnicity")
group %>%
filter(group == "Race") %>%
group_by(subgroup) %>%
rename(Race = subgroup) %>%
summarise(
`Hospitalized as % of Cases` = (sum(HOSPITALIZED_RATE)/sum(CASE_RATE))*100,
`Deaths as % of Cases` = (sum(DEATH_RATE)/sum(CASE_RATE))*100
) %>%
plot_ly(x = ~Race, y = ~`Hospitalized as % of Cases`, type = 'bar',
name = '% Hospitalized', marker = list(color = "#e9d8a6")) %>%
add_trace(x = ~Race, y = ~`Deaths as % of Cases`, name = '% Died',
marker = list(color = "#ae2012")) %>%
layout(title = "Share of Infections that Lead to Hopitalizations & Deaths",
barmode = 'group',
xaxis = list(title = ""),
yaxis = list(title = 'Share of Infection Rate',
ticksuffix = "%"))
modzcta_merge <-
merge(modzcta_shp, modzcta, by.x = "modzcta", by.y = "MODIFIED_ZCTA", all = T)
modzcta_merge %>%
ggplot() +
geom_sf(aes(fill = COVID_CASE_RATE),
color = "white",
lwd = 0.2) +
scale_fill_gradientn(
name = "Infection Rate (per 100K)",
colors = met.brewer("Pillement", type = "continuous")
) +
theme_void() +
theme(plot.title.position = 'plot',
plot.title = element_text(hjust = 0.5)) +
theme(panel.grid = element_line(color = "transparent")
)
modzcta_merge %>%
ggplot() +
geom_sf(aes(fill = COVID_DEATH_RATE),
color = "white",
lwd = 0.2) +
scale_fill_gradientn(
name = "Death Rate (per 100K)",
colors = met.brewer("OKeeffe2", type = "continuous")
) +
theme_void() +
theme(plot.title.position = 'plot',
plot.title = element_text(hjust = 0.5)) +
theme(panel.grid = element_line(color = "transparent")
)
save.image(file = "COVID.RData")
max(daily$date_of_interest)
group %>% filter(group == "Borough") %>%
group_by(subgroup) %>%
summarise(
`Hospitalized as % of Cases` = (sum(HOSPITALIZED_COUNT)/sum(CASE_COUNT))*100,
`Deaths as % of Cases` = (sum(DEATH_COUNT)/sum(CASE_COUNT))*100
) %>%
plot_ly(x=~subgroup, y=~`Hospitalized as % of Cases`, type = 'bar', name = '% Hospitalized',
marker = list(color = "#e9d8a6")) %>%
add_trace(x=~subgroup, y=~`Deaths as % of Cases`, name = '% Died', marker = list(color = "#ae2012")) %>%
layout(title = "Share of Infections that Lead to Hopitalizations & Deaths",
barmode = 'group',
xaxis = list(title=''),
yaxis = list(title='Share of Infection Rate',
ticksuffix = "%"))
group %>% filter(group == "Borough") %>%
group_by(subgroup) %>%
summarise(
`Hospitalized as % of Cases` = (sum(HOSPITALIZED_COUNT)/sum(CASE_COUNT))*100,
`Deaths as % of Cases` = (sum(DEATH_COUNT)/sum(CASE_COUNT))*100
) %>%
plot_ly(x=~subgroup, y=~`Hospitalized as % of Cases`, type = 'bar', name = '% Hospitalized',
marker = list(color = "#e9d8a6")) %>%
add_trace(x=~subgroup, y=~`Deaths as % of Cases`, name = '% Died', marker = list(color = "#ae2012")) %>%
layout(title = "Share of Infections that Lead to Hopitalizations & Deaths",
barmode = 'group',
xaxis = list(title=''),
yaxis = list(title='Share of Infections',
ticksuffix = "%"))
save.image("R_object.RData")
load("/Users/aly_will_mac/Desktop/OLD PC/WILL/LEARNING/1. ALL PROJECTS/R-NYC-COVID-Stats/COVID.RData")
getwd()
